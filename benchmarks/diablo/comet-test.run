#!/bin/bash
#SBATCH -A uot143
#SBATCH --job-name="diablo"
#SBATCH --output="run-test.log"
#SBATCH --partition=compute
#SBATCH --nodes=10
#SBATCH --export=ALL
#SBATCH --time=100    # time limit in minutes

nodes=$SLURM_NNODES
echo "Number of nodes = " $nodes
# executor-cores=5, executor-memory=24G, num-executors=nodes*4
executors=$((nodes*4))
echo "Number of executors = " $executors

# location of scala and spark
SW=/oasis/projects/nsf/uot143/$USER

export HADOOP_CONF_DIR=$HOME/cometcluster
module load hadoop/2.6.0

DIQL_HOME=$SW/diql

export JAVA_HOME=/lib/jvm/java

if [ -z ${SCALA_HOME} ]; then
   export SCALA_HOME=$SW/scala-2.11.8
fi

if [ -z ${SPARK_HOME} ]; then
   export SPARK_HOME=$SW/spark-2.2.0-bin-hadoop2.6
fi

myhadoop-configure.sh
source $HOME/cometcluster/spark/spark-env.sh
export SPARK_MASTER_HOST=$SPARK_MASTER_IP
# start HDFS
start-dfs.sh
# start Spark
$SPARK_HOME/sbin/start-all.sh -h $SPARK_MASTER_HOST

JARS=.
for I in $SPARK_HOME/jars/*.jar; do
    JARS=$JARS:$I
done

SPARK_OPTIONS="--driver-memory 24G --num-executors $executors --executor-cores 5 --executor-memory 24G --supervise"

hdfs dfs -mkdir -p /user/$USER /tmp /user/$USER/tmp

$SPARK_HOME/bin/spark-submit --jars ${DIQL_HOME}/lib/diql-spark.jar --class GroupBy --master $MASTER $SPARK_OPTIONS test.jar 1 10000000000

$SPARK_HOME/sbin/stop-all.sh
stop-dfs.sh
myhadoop-cleanup.sh
